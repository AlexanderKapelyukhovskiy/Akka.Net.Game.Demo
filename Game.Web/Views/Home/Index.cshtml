@{
    ViewData["Title"] = "Home Page";
}


<div>
    <h2>Join Game</h2>
    <form>
        Character name: <input required="" />
        <button type="submit">Join Game</button>
    </form>
</div>

<div>
    <h2>todo player name</h2>
    <h3>Health</h3>
    <p>TODO: display health</p>

    <h3>Dead</h3>
</div>

<div>
    <h2>Other Players</h2>
    TODO list all other players
</div>

@section Scripts
{
    <script language="javascript">
        document.signalRConnection.on('playerJoined',
            function(playerName, health) {

                var isMe = playerName === vm.newPlayerName();

                if (isMe) {
                    vm.thisPlayer.playerName(playerName);
                    vm.thisPlayer.changeHelth(health);
                    vm.isJoined(true);
                } else {
                    var playerExistsInList = ko.Utils.arrayFirst(vm.otherPlayers(),
                        function(player) {
                            return playerName === player.playerName();
                        });

                    if (!playerExistsInList) {
                        vm.otherPlayers.push(new PlayerViewModel(playerName, health));
                    }
                }
            }
        );

        document.signalRConnection.on('updatePlayerHealth',
            function(playerName, health) {

                var isMe = playerName === vm.newPlayerName();

                if (isMe) {
                    vm.thisPlayer().changeHelth(health);
                } else {
                    vm.otherPlayers().forEach(function(otherPlayer) {
                        if (otherPlayer.playerName() === playerName) {
                            otherPlayer.changeHelth(health);
                        }
                    });
                }
            }
        );

        var PlayerViewModel = function(playerName, health) {

            var self = this;

            self.attack = function() {
                await document.signalRConnection.invoke("attack", self.playerName());
            }

            self.changeHelth = function(newHealth) {
                self.health(newHealth);

                if (newHealth <= 0) {
                    self.isAlive(false);
                }
            }

            self.playerName = ko.observable(playerName);
            self.isAlive = ko.observable(true);
            self.health = ko.observable(NaN);

            self.changeHelth(health);
        }

        var GameViewModel = function() {

            var self = this;

            self.newPlayerName = ko.observable('');
            self.isJoined = ko.observable(false);

            self.thisPlayer = ko.observable(new PlayerViewModel('', NaN));

            self.otherPlayers = ko.observableArray();

            self.joinGame = function() {
                await document.signalRConnection.invoke("joinGame", self.newPlayerName());
            }
        }

        var vm = new GameViewModel();
        ko.applyBindings(vm);
    </script>
}
